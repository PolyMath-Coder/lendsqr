"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusCodes = void 0;
var StatusCodes;
(function (StatusCodes) {
    StatusCodes[StatusCodes["SuccessAccepted"] = 202] = "SuccessAccepted";
    StatusCodes[StatusCodes["SuccessAlreadyReported"] = 208] = "SuccessAlreadyReported";
    StatusCodes[StatusCodes["SuccessCreated"] = 201] = "SuccessCreated";
    StatusCodes[StatusCodes["SuccessIMUsed"] = 229] = "SuccessIMUsed";
    StatusCodes[StatusCodes["SuccessMultiStatus"] = 207] = "SuccessMultiStatus";
    StatusCodes[StatusCodes["SuccessNoContent"] = 204] = "SuccessNoContent";
    StatusCodes[StatusCodes["SuccessNonAuthoritativeInfo"] = 203] = "SuccessNonAuthoritativeInfo";
    StatusCodes[StatusCodes["SuccessOK"] = 200] = "SuccessOK";
    StatusCodes[StatusCodes["SuccessPartialContent"] = 206] = "SuccessPartialContent";
    StatusCodes[StatusCodes["SuccessResetContent"] = 205] = "SuccessResetContent";
    StatusCodes[StatusCodes["ClientErrorBadRequest"] = 400] = "ClientErrorBadRequest";
    StatusCodes[StatusCodes["ClientErrorConflict"] = 409] = "ClientErrorConflict";
    StatusCodes[StatusCodes["ClientErrorExpectationFailed"] = 417] = "ClientErrorExpectationFailed";
    StatusCodes[StatusCodes["ClientErrorFailedDependency"] = 424] = "ClientErrorFailedDependency";
    StatusCodes[StatusCodes["ClientErrorForbidden"] = 403] = "ClientErrorForbidden";
    StatusCodes[StatusCodes["ClientErrorGone"] = 410] = "ClientErrorGone";
    StatusCodes[StatusCodes["ClientErrorImATeapot"] = 418] = "ClientErrorImATeapot";
    StatusCodes[StatusCodes["ClientErrorLengthRequired"] = 411] = "ClientErrorLengthRequired";
    StatusCodes[StatusCodes["ClientErrorLocked"] = 423] = "ClientErrorLocked";
    StatusCodes[StatusCodes["ClientErrorLoginTimeOut"] = 440] = "ClientErrorLoginTimeOut";
    StatusCodes[StatusCodes["ClientErrorMethodNotAllowed"] = 405] = "ClientErrorMethodNotAllowed";
    StatusCodes[StatusCodes["ClientErrorMisdirectedRequest"] = 421] = "ClientErrorMisdirectedRequest";
    StatusCodes[StatusCodes["ClientErrorNotAcceptable"] = 406] = "ClientErrorNotAcceptable";
    StatusCodes[StatusCodes["ClientErrorNotFound"] = 404] = "ClientErrorNotFound";
    StatusCodes[StatusCodes["ClientErrorPayloadTooLarge"] = 413] = "ClientErrorPayloadTooLarge";
    StatusCodes[StatusCodes["ClientErrorPaymentRequired"] = 402] = "ClientErrorPaymentRequired";
    StatusCodes[StatusCodes["ClientErrorPreconditionFailed"] = 412] = "ClientErrorPreconditionFailed";
    StatusCodes[StatusCodes["ClientErrorPreconditionRequired"] = 428] = "ClientErrorPreconditionRequired";
    StatusCodes[StatusCodes["ClientErrorProxyAuthRequired"] = 407] = "ClientErrorProxyAuthRequired";
    StatusCodes[StatusCodes["ClientErrorRangeNotSatisfiable"] = 416] = "ClientErrorRangeNotSatisfiable";
    StatusCodes[StatusCodes["ClientErrorRequestHeaderFieldsTooLarge"] = 431] = "ClientErrorRequestHeaderFieldsTooLarge";
    StatusCodes[StatusCodes["ClientErrorRequestTimeout"] = 408] = "ClientErrorRequestTimeout";
    StatusCodes[StatusCodes["ClientErrorTooManyRequests"] = 429] = "ClientErrorTooManyRequests";
    StatusCodes[StatusCodes["ClientErrorUnauthorized"] = 401] = "ClientErrorUnauthorized";
    StatusCodes[StatusCodes["ClientErrorUnavailableForLegalReasons"] = 451] = "ClientErrorUnavailableForLegalReasons";
    StatusCodes[StatusCodes["ClientErrorUnprocessableEntity"] = 422] = "ClientErrorUnprocessableEntity";
    StatusCodes[StatusCodes["ClientErrorUnsupportedMediaType"] = 415] = "ClientErrorUnsupportedMediaType";
    StatusCodes[StatusCodes["ClientErrorUpgradeRequired"] = 426] = "ClientErrorUpgradeRequired";
    StatusCodes[StatusCodes["ClientErrorURITooLong"] = 414] = "ClientErrorURITooLong";
    StatusCodes[StatusCodes["InfoContinue"] = 100] = "InfoContinue";
    StatusCodes[StatusCodes["InfoProcessing"] = 102] = "InfoProcessing";
    StatusCodes[StatusCodes["InfoSwitchingProtocols"] = 101] = "InfoSwitchingProtocols";
    StatusCodes[StatusCodes["RedirectFound"] = 302] = "RedirectFound";
    StatusCodes[StatusCodes["RedirectMovedPermanently"] = 301] = "RedirectMovedPermanently";
    StatusCodes[StatusCodes["RedirectMultipleChoices"] = 300] = "RedirectMultipleChoices";
    StatusCodes[StatusCodes["RedirectNotModified"] = 304] = "RedirectNotModified";
    StatusCodes[StatusCodes["RedirectPermanent"] = 308] = "RedirectPermanent";
    StatusCodes[StatusCodes["RedirectSeeOther"] = 303] = "RedirectSeeOther";
    StatusCodes[StatusCodes["RedirectSwitchProxy"] = 306] = "RedirectSwitchProxy";
    StatusCodes[StatusCodes["RedirectTemp"] = 307] = "RedirectTemp";
    StatusCodes[StatusCodes["RedirectUseProxy"] = 305] = "RedirectUseProxy";
    StatusCodes[StatusCodes["ServerErrorBadGateway"] = 502] = "ServerErrorBadGateway";
    StatusCodes[StatusCodes["ServerErrorBandwidthLimitExceeded"] = 509] = "ServerErrorBandwidthLimitExceeded";
    StatusCodes[StatusCodes["ServerErrorGatewayTimeout"] = 504] = "ServerErrorGatewayTimeout";
    StatusCodes[StatusCodes["ServerErrorHTTPVersionNotSupported"] = 505] = "ServerErrorHTTPVersionNotSupported";
    StatusCodes[StatusCodes["ServerErrorInsufficientStorage"] = 507] = "ServerErrorInsufficientStorage";
    StatusCodes[StatusCodes["ServerErrorInternal"] = 500] = "ServerErrorInternal";
    StatusCodes[StatusCodes["ServerErrorLoopDetected"] = 508] = "ServerErrorLoopDetected";
    StatusCodes[StatusCodes["ServerErrorNetworkAuthRequired"] = 511] = "ServerErrorNetworkAuthRequired";
    StatusCodes[StatusCodes["ServerErrorNotExtended"] = 510] = "ServerErrorNotExtended";
    StatusCodes[StatusCodes["ServerErrorNotImplemented"] = 501] = "ServerErrorNotImplemented";
    StatusCodes[StatusCodes["ServerErrorServiceUnavailable"] = 503] = "ServerErrorServiceUnavailable";
    StatusCodes[StatusCodes["ServerErrorVariantAlsoNegotiates"] = 506] = "ServerErrorVariantAlsoNegotiates";
})(StatusCodes || (exports.StatusCodes = StatusCodes = {}));
exports.default = StatusCodes;
//# sourceMappingURL=statusCodes.js.map